
#파이썬 산술연산자
  ** -> 거듭제곱
  // -> 나누기 몫
  %  -> 나머지


#자료형
  참과 거짓: Boolean
  예약어: True, False(예약어 첫 글자는 대문자!!)
  True = 1, False = 2 
    Boolean형은 계산이 가능하다.

#조건문
  구조
    1. if 키워드로 시작, 한 칸 띄어쓰기 후 조건 작성
    2. 조건 작성 후 콜론: 필수!
    3. 조건 참일 때 실행될 코드를 다음 줄에 들여쓰기 후 작성
    4. elif 사용해 추가 조건 사용 가능, 이 뒤에 콜론 사용
    5. if, elif 조건 모두 거짓일 때, 실행될 코드는 else 블록에 작성, 콜론 사용
    6. 파이썬은 들여쓰기 구분한다.
  
  if score >= 10:
      print("score는 10 이상입니다.")
  elif score < 10 and score >= 5:
      print("score는 5 이상 10 미만입니다.")
  elif score < 4 and score >= 3:
      print("score는 3 이상 4 미만입니다.")
  else:
      print("score는 2 이하입니다.")
  
#리스트
  순서가 있음
  []
  .append() :  리스트에 값 추가

#딕셔너리 
    key, value 쌍을 저장하는 연관 배열, 키를 이용해서 값 찾기
    key : value 구분
    중괄호{}
    dictbox = {1:"a", 2:"b"}
    dictbox.keys()
    dictbox.values()


#인덱스와 슬라이싱
  # list[index] 원소 값
  
  listbox = [2,4,6,8,10]
  print(listbox[0])  # index 첫번째 값
  print(listbox[3])  # index 3 (네번째)
  문자일 때 슬라이싱 하려면 공백 포함해서 인덱스 세야 한다.
  
  # index 마지막 값
  print(listbox[-1])

  #list[시작:미만]


#문자열 분리
print(date.split('-'))
print(text.split()) -> 띄어쓰기 기준으로 분리


#내장함수
	sum(), count():  결측값 제외하고 계산
	len() :  결측값 유무 상관없이 총갯수 도출


# 리스트에 있는 값 반복문을 통해 +1 한 값, 출력
listbox = [2,4,6,8,10]
for item in listbox:
    result = item + 1
    print(result)


#반복문과 .append() 함수를 사용해서 리스트 만들기
listbox = [] #빈 리스트 생성
for i in range(1,6):
    listbox.append(i)


#함수 정의 def,return 함께 사용!!
괄호 안에 넣는 변수; 매개변수parameters

	# 함수 정의 (리턴 값)
		def plus(x, y):
	    result = x+y
	    return result

	# 함수 호출
		a = plus(2,3)
		print(a)

str_data = "여러분의 합격을 응원합니다!"
def rep(data):
    return data.replace("여러분", "당신")

rep(str_data)






























